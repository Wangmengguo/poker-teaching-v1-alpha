name: CI

on:
  push:
    branches: [ main, suggest-GTO-fearure-rebuild ]
  pull_request:
    branches: [ main, suggest-GTO-fearure-rebuild ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ steps.pydeps.outputs.cache-key }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            pip-${{ runner.os }}-
      - name: Install dependencies
        id: pydeps
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install -e .[dev]

      - name: Pre-commit (ruff/black/mypy)
        run: |
          pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    needs: [lint]
    timeout-minutes: 30
    env:
      # Suggest service defaults
      SUGGEST_POLICY_VERSION: v1
      SUGGEST_MIXING: on
      SUGGEST_POLICY_DIR: artifacts/policies
      # Django
      DJANGO_SECRET_KEY: ci-secret
      # Use SQLite by leaving DATABASE_URL empty
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel
          python -m pip install -e .[dev]

      - name: Run tests
        run: |
          pytest -q

