我想针对我们建议的这个功能提出以下的重构建议。

首先是这个功能的边界:
我希望这个功能是严格控制在策略层的，它既能指导玩家的行动，又能帮助 Robot 进行一个混频的对战。

然后是这个功能的实现:
第一点，这个功能必须是严格参照 GTO 相关的理论的。
第二点，这个功能必须是能够剥削比较弱的玩家的。
第三点是这个功能最终的目标是用于指导玩家更好的学会德州扑克这个游戏。

为了实现上述的这个功能，我把函数定义为如下:
1. 第一个函数它一定是观测函数，它能够从排序中获取他想要的所有内容，但是不能包含玩家视角以外的内容。
2. 第二个函数是转化函数，它负责把观测的函数中取得的具体的数值编码编译成相应的数据格式，传导给策略函数。
3. 第三个函数是建议函数，它通过编译层转化的观测数据，结合 GTO 理论和剥削的实际情况给出相应的建议。
4. 第四个函数是决策函数，它负责。把相应的建议切至在合规的游戏实际动作中，并且实时反馈给游戏的主界面.
5. 第五个函数是解释函数，它负责把决策函数反馈回来的问题进行解释，并且以 GTO 的理论和剥削理论指导玩家进行更好的游戏.

建议函数是整个功能的核心：
我对这个函数的思考有如下两点。
第一点是函数在初期使用较为简单的规则及场面上发生了什么事情，可能会发生什么事情，用于直接指导函数的定义。
第二点是我们通过构建一个更加完善的策略表。让函数直接从表里面获取相应的动作建议。

策略表相关思考：
这是一个非常难实现的内容。
因为如果你直接通过各个函数，各个不同的动作，不同的尺度，进行模拟的话，这个树会非常庞大，没有一台计算机能够实现。
所以我们在进行策略表的构建时候，我们最重要的核心工作是进行分桶/转化/混频给出建议。